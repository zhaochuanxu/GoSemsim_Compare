// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// infoContentMethod_cpp
Rcpp::NumericMatrix infoContentMethod_cpp(Rcpp::StringVector& id1_, Rcpp::StringVector& id2_, Rcpp::List& anc_, Rcpp::NumericVector& ic_, const std::string& method_, const std::string& ont_);
RcppExport SEXP _GOSemSim_infoContentMethod_cpp(SEXP id1_SEXP, SEXP id2_SEXP, SEXP anc_SEXP, SEXP ic_SEXP, SEXP method_SEXP, SEXP ont_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::StringVector& >::type id1_(id1_SEXP);
    Rcpp::traits::input_parameter< Rcpp::StringVector& >::type id2_(id2_SEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type anc_(anc_SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector& >::type ic_(ic_SEXP);
    Rcpp::traits::input_parameter< const std::string& >::type method_(method_SEXP);
    Rcpp::traits::input_parameter< const std::string& >::type ont_(ont_SEXP);
    rcpp_result_gen = Rcpp::wrap(infoContentMethod_cpp(id1_, id2_, anc_, ic_, method_, ont_));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_GOSemSim_infoContentMethod_cpp", (DL_FUNC) &_GOSemSim_infoContentMethod_cpp, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_GOSemSim(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
